name: CI/CD Pipeline
run-name: Running CI/CD Pipeline

on: [push, pull_request]

jobs:
  Run-Tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Node 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test

  Deploy-Dev:
    name: Deploy to AWS S3 Dev
    needs: Run-Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Node 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Add Environment Variables
        env:
          VITE_APP_VERSION: ${{ secrets.VITE_APP_VERSION }}
          VITE_APP_GOOGLE_MAPS_API_KEY: ${{ secrets.VITE_APP_GOOGLE_MAPS_API_KEY }}
          VITE_APP_PROXY_BASE_URL: ${{ vars.VITE_PROXY_BASE_URL_DEV }}
          VITE_APP_URL: ${{ vars.VITE_APP_URL }}
        run: |
          touch .env
          echo VITE_APP_VERSION="$VITE_APP_VERSION" >> .env
          echo VITE_APP_GOOGLE_MAPS_API_KEY="$VITE_APP_GOOGLE_MAPS_API_KEY" >> .env
          echo VITE_APP_PROXY_BASE_URL="$VITE_APP_PROXY_BASE_URL" >> .env
          echo VITE_APP_URL="$VITE_APP_URL" >> .env

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: 'us-east-1'

      - name: Deploy to S3
        run: |
          echo $AWS_S3_BUCKET
          aws s3 sync ./dist s3://${{ vars.AWS_S3_BUCKET_DEV }}/ --delete

      - name: Invalidate CloudFront distribution cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_ID_DEV }} --paths "/*"
